{"version":3,"sources":["webpack:///path---build-mongodb-with-scons-venv-6a39595180f33e24e342.js","webpack:///./.cache/json/build-mongodb-with-scons-venv.json"],"names":["webpackJsonp","307","module","exports","data","markdownRemark","html","frontmatter","date","path","title","site","siteMetadata","siteName","pathContext"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,40BAAAC,aAAk2BC,KAAA,gBAAAC,KAAA,kCAAAC,MAAA,oCAA2GC,MAASC,cAAgBC,SAAA,UAAoBC","file":"path---build-mongodb-with-scons-venv-6a39595180f33e24e342.js","sourcesContent":["webpackJsonp([5762118053317],{\n\n/***/ 307:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>在使用Scons构建Mongodb的时候，报了个找不到typing包的错误，检查后发现python使用了venv下面自己安装的版本，而scons命令却使用了系统的。\\n在构建脚本中，如果执行scons的python版本如果合适的话，就直接使用了：</p>\\n<pre><code class=\\\"language-python\\\">def find_python(min_version=(2, 5)):\\n    try:\\n        if sys.version_info >= min_version:\\n            return sys.executable\\n    except AttributeError:\\n        # In case the version of Python is somehow missing sys.version_info or sys.executable.                                                                                                        \\n        pass\\n\\n    ...此处省略\\n</code></pre>\\n<p>解决方法很简单，由于scons是一个python库，直接运行 'pip install scons' 在自己的python里面安装一个。</p>\\n<p>需要注意的是，bash会有命令缓存，可以检查一下scons实际使用的是哪一个，下面是可能的输出：</p>\\n<pre><code class=\\\"language-bash\\\">> hash -t scons\\n/usr/bin/scons\\n</code></pre>\\n<p>可以直接使用命令 'hash -d scons' 将其清除，然后就可以正常使用scons构建了。</p>\",\"frontmatter\":{\"date\":\"July 21, 2017\",\"path\":\"/build-mongodb-with-scons-venv/\",\"title\":\"build mongodb with scons & venv\"}},\"site\":{\"siteMetadata\":{\"siteName\":\"黑貓博客\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---build-mongodb-with-scons-venv-6a39595180f33e24e342.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>在使用Scons构建Mongodb的时候，报了个找不到typing包的错误，检查后发现python使用了venv下面自己安装的版本，而scons命令却使用了系统的。\\n在构建脚本中，如果执行scons的python版本如果合适的话，就直接使用了：</p>\\n<pre><code class=\\\"language-python\\\">def find_python(min_version=(2, 5)):\\n    try:\\n        if sys.version_info >= min_version:\\n            return sys.executable\\n    except AttributeError:\\n        # In case the version of Python is somehow missing sys.version_info or sys.executable.                                                                                                        \\n        pass\\n\\n    ...此处省略\\n</code></pre>\\n<p>解决方法很简单，由于scons是一个python库，直接运行 'pip install scons' 在自己的python里面安装一个。</p>\\n<p>需要注意的是，bash会有命令缓存，可以检查一下scons实际使用的是哪一个，下面是可能的输出：</p>\\n<pre><code class=\\\"language-bash\\\">> hash -t scons\\n/usr/bin/scons\\n</code></pre>\\n<p>可以直接使用命令 'hash -d scons' 将其清除，然后就可以正常使用scons构建了。</p>\",\"frontmatter\":{\"date\":\"July 21, 2017\",\"path\":\"/build-mongodb-with-scons-venv/\",\"title\":\"build mongodb with scons & venv\"}},\"site\":{\"siteMetadata\":{\"siteName\":\"黑貓博客\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/build-mongodb-with-scons-venv.json\n// module id = 307\n// module chunks = 5762118053317"],"sourceRoot":""}